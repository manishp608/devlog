A few days ago I started using Pygame to make Pong, just a basic version. Things that I included follow:
	1. Two paddles to hit, 2 players game
	2. To make the ball go in some random direction
	3. To handle collision with walls and paddles
	4. Making the score and displaying it


(image of pong main screen)

Starting to prepare the game, the above things are those that I have planned and I think they are the basic building blocks for this. Also thought to add a CPU player instead of 2 players but this is the first version that I have thought about. Made a separate folder for the game. Since I am writing this after completing the game (basic version), I will be showing all the different files that I have made in the process. If you are starting this out just don't freak out, you'll figure it out. The files include for the ball, paddles, buttons, the main game, scoreboard, settings and for all the different functions. I will follow through the steps I did rather than showing the final output. 

The basic window is setup in pygame using init() and set_mode() and also setting caption. Using time to set the frame rate to 60 which will prevent the CPU from doing over work. The first thing is to make the two paddles which can be controlled by using the keyboard. There is no CPU here to consider so it's pretty faster (in terms of making). Another separate file is made for the paddle like a class, I named it board in the files so not to confuse. Using Rect of pygame making a rect when called, with an input parameter like "left" or "right" will be given to the class to make the board at either the left end or right end. Once completing making the two boards in the main file which is named pong.py, we listen to events using the pygame.event.get(). W S are set to the left player as Up and Down and arrow keys for right player. This is simple comparing to the other 3 parts of the game.

One thing I want to mention when doing this type of projects is naming of the things, I am getting used to name them very clearly. Another thing to do is refactoring the code after every single small part (not every step. I did it like after every single steps of the 4 steps as stated above). I have also heard that functions we use should have just one work and only one. Once code is written and after some time we think to add a feature then we should not remove the existing one but add to it. Must be able to add features without removing the code but adding it. 

Made a similar class to ball. The issue that faced here was to make the ball go in some random direction. I tried to assign random values between -5 and 5 for x-velocity and y-velocity. I thought this would make it work but I found a better solution for this in the internet. Keeping the speed as 10 or so. Choosing an angle between 0 and 360 and producing the sin and cos components of the speed and assigning it to velocities. This made things easier but sometimes unpredictable like when angle is between 0 and 20 wrt vertical axis, it takes longer time for the ball to reach the paddle. I have still not resolved the issue.

Coming to the 3rd step of this is making the collisions. I used colliderect of pygame to implement this. Although I tried to make my own collide detection system, I found it easier to use pygame in-built function. As soon as the ball hits the wall I flip the y-component of velocity and when it hits the paddle I flipped the x component of the velocity. If it hits the leftmost or rightmost side, the game is brought into reset state and the ball again comes in random direction. I still have some loose bugs where this collisions does not work perfectly. You will occasionally notice them while playing the game. I still cannot fix them and if you could help then please mail me. 

The last part of the game is to make score and displaying it. I used pygame again, to render the score and I kept the winning score to be 11. Also made the play button class to start the game when play button is clicked. After one player wins the play button is shown again. Though the game seems to work most of the time as intended, apart from the bugs, the game seems repetitive after sometime. I tried increasing the speed after the ball hit either of the paddle but still the game seems to be predictable and I know it should not seem so. I am thinking on ways to improve it.

If you want to provide your valuable insights regarding the code, link is given below to access the files. I would greatly appreciate if you provide your feedback. I am still working on comments thing, you can also suggest me regarding that also. My email is given below. But for now I will update the comments manually from html since that is what I know now.