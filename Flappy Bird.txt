07/07/2024
Yesterday I started making a clone of Flappy Bird. I am writing this to keep track of the things that's been happening. The reason to write now is when I write it later I cannot tell my complete thoughts of the process but now might be a better time to tell. Coming to the things I thought to do in this include
	1. Make the bird and making it jump
	2. Making an infinite background
	3. Making the pipes generate at random height
	4. Score and stuff
These are the basic stuff I prepared and I really want to expand on this. Okay, coming to the first thing, I made the bird using RigidBody, SpriteRenderer and a BoxCollider and also a script to control it. I chose an image from internet just for it to work. I heard it from many people "Make it work and then make it better". Now making the bird jump when I press W or Space or Up arrow is done through script. This was the thing that I did yesterday. I added a force in upward direction to make the body move up. Since the body was under freefall (Dynamic in Unity by default), adding a force did not create the expected outcome. I had to press the key several times to compensate for the force of gravity. Then when using the internet for answers, found out that using velocity made the outcome better. Though force simulates real life it is velocity which worked for me. I did add ground to not make the bird fall through screen.

The thing which was a big roadblock until now is making the background seem infinite. I wanted to make the bird stay in same x-position and just move in the y direction and the background behind it to move to make the illusion of movement. There were 2 methods as per YouTube one was the material method and the other one was tile method. I have little idea how the former worked so I worked with the latter tile method. It means there are 2 tiles side by side and they both move to the left. Let screen1 be the screen which is on the left side and screen2 be the one that is on the right. When screen1 center reaches a point which is set in such a way that screen1 goes out of the area of camera, it again goes to the right of screen2. The process continues forever. Many methods can be followed but I chose this one.

This thing started today, making the pipes. Made two rectangles and they move similar to the background. Keeping them as the child of parent Pipe object the following will be easier. Using coroutine the Pipe prefab is generated after some specified time with a random y value between range. Once they cross the camera the pipes are destroyed. Next thing I did was to add collider and turned the isTrigger on to the pipe parent. The collider is the space between the two rectangles. It is to increase the score as the bird crosses it. Added collider for both the rectangles. The collision is handled in the bird script. There is a GameManager script and object which handles the scores. When point is score this is called and it updates the score. 

The major setback here is first I used the trigger on the pipe parent script. I told that I have to make a pipe every 1.5 seconds so Pipe of the hierarchy is attached to GenPipe. This created a problem, the GenPipe did not have a reference to create a pip once the first pipe vanished. So now I had to make a prefab of the pipe. The code for trigger was written at first in script which controlled the movement of the pipes. I attached the script to the pipe in hierarchy which worked but only for the first pipe. For the second pipe the score did not increase. This pipe movement script controlled the score increase also like a call to it. The score was first controlled through pipe object. To control it I need to add GameManager to it. I did add it to the first pipe but to add it to every pipe I needed to add GameManager to the prefab of the pipe and it could not happen since the GameManager is from in-game. Tried to make the prefab of GameManager it worked, but not at all as it should. The score increased but after I stopped the game it showed the score. 
 
To change this I moved the collision to the bird control which made life easier. I did not need prefab of GameManager. Since I can add GameManager to bird there was no issue till the bird goes away. Now the game works as fine. Now the things to add to this are the play button. I want to make my own sprites and do the stuff and later add the things. The thing I observed is I don't remember most of the things that I did last time while making the previous game. I had to reinforce the things so I will make another scene from the ground up. I am thinking to start sprite making tomorrow and then polish the game. I want to make somewhat polished game even though it is not original. I want to go through all the steps of it till the end. Make it playable and enjoyable. The first will be over today and I will work on the latter. With this I will continue later. See ya.